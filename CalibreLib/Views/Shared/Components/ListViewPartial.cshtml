@using CalibreLib.Views.Shared.Components
@model List<ListViewModel>
@{
    var split = Convert.ToInt32(Math.Round(Model.Count() / 2f));
}

@{
    <div class="container d-flex flex-wrap mt-4">
        <div id="first" class="col-xs-12 col-sm-6">
            @for(int i = 0; i < split; i++)
            {
                <div class="d-flex align-items-center">
                    @if (Model[i].FilterType == EFilterType.Ratings)
                    {
                        <a href="@Model[i].Url">
                            <div class="col-xs-2 col-sm-2 col-md-1">
                                <span class="badge rounded-pill bg-primary">@Model[i].Count</span>
                            </div>
                        </a>
                    }
                    else
                    {
                        <div class="col-xs-2 col-sm-2 col-md-1">
                            <span class="badge rounded-pill bg-primary">@Model[i].Count</span>
                        </div>
                    }
                    <div class="col-xs-10 col-sm-10 col-md-11 d-flex align-items-center">
                        @if(Model[i].FilterType == EFilterType.Ratings)
                        {
                            var ratingValue = Convert.ToInt32(Model[i].Title);
                            @await Component.InvokeAsync(typeof(RatingComponent), new { ratingValue })
                        }
                        else
                        {
                            <a href="@Model[i].Url" class="ms-2">@Model[i].Title</a>
                        }
                    </div>
                </div>
            }
        </div>
        <div id="second" class="col-xs-12 col-sm-6">
            @for(int i = split; i < Model.Count(); i++)
            {
                <div class="d-flex align-items-center">
                     @if (Model[i].FilterType == EFilterType.Ratings)
                    {
                        <a href="@Model[i].Url">
                            <div class="col-xs-2 col-sm-2 col-md-1">
                                <span class="badge rounded-pill bg-primary">@Model[i].Count</span>
                            </div>
                        </a>
                    }
                    else
                    {
                        <div class="col-xs-2 col-sm-2 col-md-1">
                            <span class="badge rounded-pill bg-primary">@Model[i].Count</span>
                        </div>
                    }
                    <div class="col-xs-10 col-sm-10 col-md-11">
                        @if(Model[i].FilterType == EFilterType.Ratings)
                        {
                            var ratingValue = Convert.ToInt32(Model[i].Title);
                            @await Component.InvokeAsync(typeof(RatingComponent), new { ratingValue })
                        }
                        else
                        {
                            <a href="@Model[i].Url" class="ms-2">@Model[i].Title</a>
                        }
                    </div>
                </div>
            }
        </div>
    </div>
}