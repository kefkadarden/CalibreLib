@* @model IEnumerable<BookCardModel> *@
@using CalibreLib.Views.Shared.Components

<h2>Books</h2>
@await Component.InvokeAsync(typeof(ToolbarComponent), new { type = EFilterType.BookCardGrid })
<div id="mainCardGrid">
    @{

        var strHeader = @"<div class=""container-fluid row display-flex"">
            <div id=""cardGridRow"" class=""grid h-100 w-100"">";
        ViewContext.Writer.WriteLine(strHeader);

        await Html.RenderPartialAsync("~/Views/Shared/Components/BookCardGridRecords.cshtml");

        var strFooter = @"</div>
        </div>";
        ViewContext.Writer.WriteLine(strFooter);
    }
</div>


<div id="paginationToolbar" class="visually-hidden">    
    <button class="btn btn-outline-primary" for="btnPrev" onclick="pagingNavigation('Prev');">Prev</button>
    <input type="text" autocomplete="false" inputmode="numeric" id="lblPageNum" class="fw-bold p-1" style="width:50px;" value="1" />
    <button class="btn btn-outline-primary" for="btnNext" onclick="pagingNavigation('Next');">Next</button>
    <label id="lblPageCount" class="fw-bold p-3"></label>
</div>

<script type="text/javascript">
    window.addEventListener('load', function () {

        console.log('page',page);
        document.getElementById('loading').style.display = 'none';
        const storedPagingEnabledValue = (localStorage.getItem('gridPagingEnabled') === 'true');
        togglePagingEnabled(storedPagingEnabledValue);

        const storedSortBy = localStorage.getItem('gridSortBy');
        if (storedSortBy && $('#' + storedSortBy).length > 0)
            $('#' + storedSortBy)[0].checked = true;


        $scroll.on('request.infiniteScroll', function (event, path) {
            showLoading();
        });

        $scroll.on('load.infiniteScroll', function (event, response, path) {
            hideLoading();
        });
        console.log('page',page);
        $('#lblPageSize')[0].value = localStorage.getItem('gridPageSize') ?? 10;
        $('#cardGridRow').infiniteScroll('loadNextPage');
        //loadBooks(ajaxCallUrl);
        

    });

    function showLoading() {
        document.getElementById('loading').style.display = 'flex';
        document.getElementById('main-container').classList.add('loading-blur');
    }

    function hideLoading() {
        document.getElementById('loading').style.display = 'none';
        document.getElementById('main-container').classList.remove('loading-blur');
    }
</script>

@section Scripts{
    <script>
        var $grid = $('.grid').isotope({
                itemSelector: '.grid-item',
                layoutMode: 'masonry',
                masonry: {
                    horizontalOrder: true
                },
                getSortData: {
                    title: '.card-title',
                }
            });

        // var $scroll;
        // $scroll = $('#cardGridRow').infiniteScroll({
        //         path: function(){
        //             page = this.pageIndex + 1;
        //                 return ajaxCallUrl + "?" + loadBooksQuery();
        //         },
        //         append: '.grid-item',
        //         history: false,
        //     });

        
    </script>
}