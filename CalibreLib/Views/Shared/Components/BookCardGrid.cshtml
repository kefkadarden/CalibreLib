@model IEnumerable<BookCardModel>

<h2>Books</h2>
<div class="btn-group mb-4" role="group">
  <input type="radio" class="btn-check" name="btnradio" id="datedesc" autocomplete="off" checked onclick="updateSortBy('datedesc');">
  <label class="btn btn-outline-primary" for="datedesc">Date newest</label>

  <input type="radio" class="btn-check" name="btnradio" id="date" autocomplete="off" onclick="updateSortBy('date');">
  <label class="btn btn-outline-primary" for="date">Date oldest</label>

  <input type="radio" class="btn-check" name="btnradio" id="title" autocomplete="off" onclick="updateSortBy('title');">
  <label class="btn btn-outline-primary" for="title">Alphabetical</label>

  <input type="radio" class="btn-check" name="btnradio" id="titledesc" autocomplete="off" onclick="updateSortBy('titledesc');">
  <label class="btn btn-outline-primary" for="titledesc">Alphabetical reversed</label>

  <input type="radio" class="btn-check" name="btnradio" id="author" autocomplete="off" onclick="updateSortBy('author');">
  <label class="btn btn-outline-primary" for="author">Author</label>

  <input type="radio" class="btn-check" name="btnradio" id="authordesc" autocomplete="off" onclick="updateSortBy('authordesc');">
  <label class="btn btn-outline-primary" for="authordesc">Author reversed</label>
  <label class="btn-group-vertical ms-3 me-1" for="btnPage">Toggle Pages</label>
  <input type="checkbox" class="ms-1" name="btnPage" id="btnPage" onclick="$(function () { const btnPage = $('#btnPage')[0]; togglePagingEnabled(btnPage.checked); });" /> <!--Need to implement the pagination here with hide and show. -->
  
  <label class="btn-group-vertical ms-3 ps-3 me-1 border-start border-dark" for="btnPage">Page Size</label>
  <input type="text" autocomplete="false" inputmode="numeric" id="lblPageSize" class="fw-bold p-1 text-center" style="width:50px;" value="10" />
</div>
<div id="mainCardGrid">
    @{

        var strHeader = @"<div class=""container-fluid row display-flex"">
            <div id=""cardGridRow"" class=""row"">";
        ViewContext.Writer.WriteLine(strHeader);

        await Html.RenderPartialAsync("~/Views/Shared/Components/BookCardGridRecords.cshtml", Model);

        var strFooter = @"</div>
        </div>";
        ViewContext.Writer.WriteLine(strFooter);
    }
</div>
<div class="row">  
    <div id="loading" style="text-align:center; padding:0 0 0 0">  
        <img src='~/images/loading.gif' />  
    </div>  
</div>
<div id="paginationToolbar" class="visually-hidden">    
    <button class="btn btn-outline-primary" for="btnPrev" onclick="pagingNavigation('Prev');">Prev</button>
    <input type="text" autocomplete="false" inputmode="numeric" id="lblPageNum" class="fw-bold p-1" style="width:50px;" value="1" />
    <button class="btn btn-outline-primary" for="btnNext" onclick="pagingNavigation('Next');">Next</button>
    <label id="lblPageCount" class="fw-bold p-3"></label>
</div>
<script type="text/javascript" src="js/cardgrid.js" asp-append-version="true"></script>
<script type="text/javascript">
    window.addEventListener('load', function () {
        $("div#loading").hide();
        const storedPagingEnabledValue = (localStorage.getItem('gridPagingEnabled') === 'true');
        togglePagingEnabled(storedPagingEnabledValue);
        const storedSortBy = localStorage.getItem('gridSortBy');
        $('#' + storedSortBy)[0].checked = true;
        $('#lblPageSize')[0].value = localStorage.getItem('gridPageSize') ?? 10;
        loadBooks(ajaxCallUrl);
        $(window).scroll(scrollHandler);
    });
</script>

