@using System.Security.Principal
@using System.Security.Claims
@using CalibreLib.Areas.Identity.Data
@using Microsoft.AspNetCore.Identity
@inject UserManager<ApplicationUser> userManager
@{
    var user = await userManager.GetUserAsync(User);
    var firstInitial = (user != null && user?.FirstName != null) ? user?.FirstName?.Substring(0, 1) : "";
    var lastInitial = (user != null && user?.LastName != null) ? user?.LastName?.Substring(0, 1) : "";
    string className = User.Identity?.IsAuthenticated == true ? "account-image" : "empty-image";
}
<div class="navbar-nav dropdown">
    <div class="account-background" type="button" data-bs-toggle="dropdown">
        <div class="@className">@string.Format("{0}{1}", firstInitial, lastInitial).ToUpper()</div>
    </div>
    <ul class="dropdown-menu dropdown-menu-right">
@if (User.Identity?.IsAuthenticated == true)
{
    <li class="dropdown-item">
        <a asp-area="Identity" asp-controller="Account" asp-action="Manage" class="nav-link"><partial name="UserMenuItemPartial" model="user" /></a>
        
    </li>
    <li class="dropdown-item">
                <img class="sign-out-image" src="~/images/sign-out.svg" />
                <div class="sign-out-container">
                    <form class="form-inline" asp-area="Identity" asp-page="/Account/Logout" asp-route-returnUrl="@Url.Action("Index", "Home", new { area = "" })">
                        <button type="submit" class="nav-link btn btn-link text sign-out-button">Sign Out</button>
                    </form>
                </div>
    </li>
}
else
{
        <li class="dropdown-item">
            <form class="form-inline" asp-area="Identity" asp-page="/Account/Login">
                <button type="submit" class="nav-link btn btn-link text">Sign In</button>
            </form>
        </li>
}
    </ul>
</div>
